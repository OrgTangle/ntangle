#+title: NTangle

Basic tangling of Org documents using Nim.

- Note :: ~ntangle~ works well for the lightly tested files in the
          ~test/~ dir of this repo. See the [[#limitations][Limitations]] section below.

See the [[https://orgmode.org/manual/Extracting-source-code.html][Org Manual -- Extracting source code]] section for *real Org
tangling*.

* Download binary
- 64-bit GNU/Linux type OS user :: Head over to the
     [[https://github.com/OrgTangle/ntangle/releases][Releases]] section of this repo to download the statically linked
     binary. Simply download and extract to get the ~ntangle~ binary
     and put it anywhere in your PATH.
- Other OSes :: Follow the [[#development][Development]] section below to build the
                binary locally on your OS.
* Usage
#+begin_example
ntangle FILE.org
#+end_example
The tangled files will be created relative to the /FILE.org/ source
Org file.
* Development
** Building
[[https://github.com/nim-lang/nimble][~nimble~]] is used to build this project. This utility ships with Nim
installation. Think of it as the equivalent of ~pip~ in Python.

With Nim/~nimble~ installed, do:
#+begin_example
git clone https://github.com/OrgTangle/ntangle
cd ntangle
nimble build # creates the ntangle binary in the git repo root dir
#+end_example
** Installing
If you want to install it (will build the binary and copy it to
=~/.nimble/bin/=), do:
#+begin_example
# cd to the git repo dir
nimble install
#+end_example

/You need to have added =~/.nimble/bin/= to your ~PATH~ environment
variable.
** Testing
#+begin_src shell :results output verbatim
cd tests
./test.sh
#+end_src

# #+RESULTS:

#+begin_example
  Verifying dependencies for ntangle@0.1.1
   Building ntangle/ntangle using c backend
Parsing tests/test1/test1.org ..
  Writing tests/test1/test_passing.nim (8 lines) ..
  Writing tests/test1/test_failing.nim (8 lines) ..

Parsing tests/tangle_no_yes/tangle_no_yes.org ..
  Writing tests/tangle_no_yes/tangle_no_yes.nim (2 lines) ..
  Writing tests/tangle_no_yes/specified_file.nim (2 lines) ..

Parsing tests/src_blocks_with_extra_indentation/src_blocks_with_extra_indentation.org ..
  Writing tests/src_blocks_with_extra_indentation/hi2.nim (3 lines) ..
  Writing tests/src_blocks_with_extra_indentation/hello2.nim (3 lines) ..

Parsing tests/multiple_src_blocks_tangled_to_same_file/multiple_src_blocks_tangled_to_same_file.org ..
  Writing tests/multiple_src_blocks_tangled_to_same_file/hi.nim (3 lines) ..
  Writing tests/multiple_src_blocks_tangled_to_same_file/hello.nim (3 lines) ..

Parsing tests/wyag/write-yourself-a-git.org ..
  [WARN] Line 200 - ':noweb' header argument is not supported at the moment.
  [WARN] Line 226 - ':noweb' header argument is not supported at the moment.
  [WARN] Line 339 - ':noweb' header argument is not supported at the moment.
  Writing tests/wyag/wyag (5 lines) ..
  Writing tests/wyag/wyag-tests (104 lines) ..
  Writing tests/wyag/libwyag.py (683 lines) ..

Parsing tests/shebang/shebang.org ..
  Writing tests/shebang/echo.sh (3 lines) ..

Parsing tests/missing_arg_value/missing_arg_value.org ..
  [ERROR] Line 1 - The header arg ':tangle' is missing its value.

Parsing tests/mkdirp_no/mkdirp_no.org ..
  [ERROR] Unable to write to tests/mkdirp_no/./foo/bar/mkdirp_test.sh; tests/mkdirp_no/./foo/bar does not exist

Parsing tests/mkdirp_yes/mkdirp_yes.org ..
  Creating tests/mkdirp_yes/./foo/bar ..
  Writing tests/mkdirp_yes/./foo/bar/mkdirp_test.sh (2 lines) ..

Parsing tangle_mode.org ..
  Writing file_permissions_755 (2 lines) ..
  Writing file_permissions_600_override_shebang (3 lines) ..
  Writing file_permissions_644 (2 lines) ..

#+end_example
* Limitations
I wouldn't be surprised if there are many more limitations than the
few listed below:
- Does not support Org heading specific header properties.
- Does not support file specific header properties.
- Does not support ~noweb~. I sorely miss the lack of ~noweb~
  support.. I use it heavily in [[https://github.com/kaushalmodi/eless][~eless~]].
- A lot of other tangle options.. Visit ~(org) Extracting Source Code~
  Info manual node.
* History
The ~ntangle.nim~ file was written as an exercise to roughly translate the
Python script [[https://github.com/thblt/org-babel-tangle.py][~org-babel-tangle.py~]] (by @thblt) to Nim.
* Other Org tangling implementations
See [[https://github.com/OrgTangle]].
